{
  "id" : "30744879-7c3a-41de-bef8-c09b81aee619",
  "parentId" : "04d0e6e9-1271-401a-858a-d681e95c16c2",
  "rootId" : "04d0e6e9-1271-401a-858a-d681e95c16c2",
  "name" : "root.Bowtie2_Indexer",
  "app" : "data:text/plain;base64,",
  "status" : "COMPLETED",
  "inputs" : {
    "reference_or_index" : [ {
      "size" : 4117452800,
      "path" : "/media/storage/workdir/LocalRerun20170810101035/app-2017-08-10-120230.630/root/Bowtie2_Indexer/human_g1k_v37_decoy.phiX174_bowtie2-2.2.6.tar",
      "location" : "/media/storage/workdir/LocalRerun20170810101035/files/human_g1k_v37_decoy.phiX174_bowtie2-2.2.6.tar",
      "name" : "human_g1k_v37_decoy.phiX174_bowtie2-2.2.6.tar",
      "checksum" : "sha1$1c6a4fc1d5f937217ae93545151c58eef7006a14",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "__inherit__" : "fasta_reference",
          "reference_genome" : "human_g1k_v37_decoy.phiX174"
        }
      },
      "$type" : "File"
    } ]
  },
  "outputs" : {
    "bowtie_index_archive" : {
      "size" : 4117452800,
      "path" : "/media/storage/workdir/LocalRerun20170810101035/app-2017-08-10-120230.630/root/Bowtie2_Indexer/human_g1k_v37_decoy.phiX174_bowtie2-2.2.6.tar",
      "location" : "/media/storage/workdir/LocalRerun20170810101035/app-2017-08-10-120230.630/root/Bowtie2_Indexer/human_g1k_v37_decoy.phiX174_bowtie2-2.2.6.tar",
      "name" : "human_g1k_v37_decoy.phiX174_bowtie2-2.2.6.tar",
      "checksum" : "sha1$1c6a4fc1d5f937217ae93545151c58eef7006a14",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "__inherit__" : "fasta_reference",
          "reference_genome" : "human_g1k_v37_decoy.phiX174"
        }
      },
      "$type" : "File"
    }
  },
  "resources" : {
    "cpu" : 32,
    "memMB" : 46967,
    "diskSpaceMB" : null,
    "networkAccess" : true,
    "workingDir" : null,
    "tmpDir" : null,
    "outDirSize" : null,
    "tmpDirSize" : null
  },
  "visiblePorts" : [ ]
}