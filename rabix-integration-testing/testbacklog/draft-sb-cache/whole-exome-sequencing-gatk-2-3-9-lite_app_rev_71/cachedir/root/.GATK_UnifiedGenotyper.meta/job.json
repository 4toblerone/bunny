{
  "id" : "4ed42153-0261-427b-a6aa-c17e93d3735b",
  "parentId" : "cd371ce0-9406-4312-9d72-dfdd24bdf2fa",
  "rootId" : "cd371ce0-9406-4312-9d72-dfdd24bdf2fa",
  "name" : "root.GATK_UnifiedGenotyper",
  "app" : "data:text/plain;base64,",
  "status" : "COMPLETED",
  "inputs" : {
    "cpu_per_job" : 1,
    "dbsnp" : [ {
      "size" : 8436107210,
      "path" : "/media/storage2/workdir/LocalRerun20170817094835/files/dbsnp_137.b37.vcf",
      "location" : "/media/storage2/workdir/LocalRerun20170817094835/files/dbsnp_137.b37.vcf",
      "name" : "dbsnp_137.b37.vcf",
      "checksum" : "sha1$6b75666629d1028bc7b792e2902e36fa9c598282",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : { }
      },
      "$type" : "File"
    } ],
    "genotype_likelihoods_model" : "BOTH",
    "intervals_file" : [ {
      "size" : 4852475,
      "path" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_UnifiedGenotyper/exome_targets.b37.sorted.bed",
      "location" : "/media/storage2/workdir/LocalRerun20170817094835/files/exome_targets.b37.sorted.bed",
      "name" : "exome_targets.b37.sorted.bed",
      "checksum" : "sha1$e2afb6abf293e4854695d59ba389f41f9f598692",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : { }
      },
      "$type" : "File"
    } ],
    "memory_per_job" : 12000,
    "reads" : [ {
      "size" : 4879344162,
      "path" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_PrintReads/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.bam",
      "location" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_PrintReads/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.bam",
      "name" : "C835.HCC1143_BL.4.converted.realigned.base_recalibrated.bam",
      "checksum" : "sha1$354d9eedc7b3a38fd5e289c56a21466b17b6bf92",
      "secondaryFiles" : [ {
        "$type" : "File",
        "size" : 2977752,
        "path" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_PrintReads/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.bam.bai",
        "location" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_PrintReads/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.bam.bai",
        "name" : "C835.HCC1143_BL.4.converted.realigned.base_recalibrated.bam.bai",
        "checksum" : "sha1$507b9604b811b463ea6015447cf5ef1cfb9a8ff5",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : null
        },
        "$type" : "File"
      }, {
        "$type" : "File",
        "size" : 0,
        "path" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_PrintReads/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.bai",
        "location" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_PrintReads/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.bai",
        "name" : "C835.HCC1143_BL.4.converted.realigned.base_recalibrated.bai",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : null
        },
        "$type" : "File"
      } ],
      "properties" : {
        "sbg:metadata" : {
          "Quality scale" : "sanger",
          "case_id" : "CCLE-HCC1143BL",
          "experimental_strategy" : "WXS",
          "intervals_file" : "NO_INTERVALS",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "reference_genome" : "human_g1k_v37_decoy",
          "sample_id" : "HCC1143BL",
          "sample_type" : "EBV Immortalized Normal",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    } ],
    "reference" : [ {
      "size" : 3189750467,
      "path" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta",
      "location" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta",
      "name" : "human_g1k_v37_decoy.fasta",
      "checksum" : "sha1$992291353a574f76f4be22ed6e37a64bf37e215f",
      "secondaryFiles" : [ {
        "$type" : "File",
        "size" : 2813,
        "path" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta.fai",
        "location" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta.fai",
        "name" : "human_g1k_v37_decoy.fasta.fai",
        "checksum" : "sha1$655334a26593e48e5047a45d219553107e96c675",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : { }
        },
        "$type" : "File"
      }, {
        "$type" : "File",
        "size" : 16694,
        "path" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/SBG_FASTA_Indices/human_g1k_v37_decoy.dict",
        "location" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/SBG_FASTA_Indices/human_g1k_v37_decoy.dict",
        "name" : "human_g1k_v37_decoy.dict",
        "checksum" : "sha1$fa0fba867007b2201828bf4c06631d8c5123ac8c",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : { }
        },
        "$type" : "File"
      } ],
      "properties" : {
        "sbg:metadata" : {
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    } ],
    "threads_per_job" : 7
  },
  "outputs" : {
    "raw_vcf" : {
      "size" : 13212030,
      "path" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_UnifiedGenotyper/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.vcf",
      "location" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_UnifiedGenotyper/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.vcf",
      "name" : "C835.HCC1143_BL.4.converted.realigned.base_recalibrated.vcf",
      "checksum" : "sha1$bdec9465ab48d3936c7cca15276d2ea84f68159f",
      "secondaryFiles" : [ {
        "$type" : "File",
        "size" : 246260,
        "path" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_UnifiedGenotyper/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.vcf.idx",
        "location" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_UnifiedGenotyper/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.vcf.idx",
        "name" : "C835.HCC1143_BL.4.converted.realigned.base_recalibrated.vcf.idx",
        "checksum" : "sha1$f7335d4c19b1cb150a904ae7953a3483e16e8189",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : null
        },
        "$type" : "File"
      } ],
      "properties" : {
        "sbg:metadata" : {
          "Quality scale" : "sanger",
          "case_id" : "CCLE-HCC1143BL",
          "experimental_strategy" : "WXS",
          "intervals_file" : "NO_INTERVALS",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "reference_genome" : "human_g1k_v37_decoy",
          "sample_id" : "HCC1143BL",
          "sample_type" : "EBV Immortalized Normal",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    }
  },
  "resources" : {
    "cpu" : 32,
    "memMB" : 46967,
    "diskSpaceMB" : null,
    "networkAccess" : true,
    "workingDir" : null,
    "tmpDir" : null,
    "outDirSize" : null,
    "tmpDirSize" : null
  },
  "visiblePorts" : [ "raw_vcf" ]
}