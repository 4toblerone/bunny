{
  "id" : "2ad90d24-5644-4fac-b0b5-15090c1e8d9e",
  "parentId" : "cd371ce0-9406-4312-9d72-dfdd24bdf2fa",
  "rootId" : "cd371ce0-9406-4312-9d72-dfdd24bdf2fa",
  "name" : "root.GATK_IndelRealigner",
  "app" : "data:text/plain;base64,",
  "status" : "COMPLETED",
  "inputs" : {
    "cpu_per_job" : 1,
    "intervals_file" : [ {
      "size" : 4852475,
      "path" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_IndelRealigner/exome_targets.b37.sorted.bed",
      "location" : "/media/storage2/workdir/LocalRerun20170817094835/files/exome_targets.b37.sorted.bed",
      "name" : "exome_targets.b37.sorted.bed",
      "checksum" : "sha1$e2afb6abf293e4854695d59ba389f41f9f598692",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : { }
      },
      "$type" : "File"
    } ],
    "known_alleles" : [ {
      "size" : 237684308,
      "path" : "/media/storage2/workdir/LocalRerun20170817094835/files/1000G_phase1.indels.b37.vcf",
      "location" : "/media/storage2/workdir/LocalRerun20170817094835/files/1000G_phase1.indels.b37.vcf",
      "name" : "1000G_phase1.indels.b37.vcf",
      "checksum" : "sha1$4218ecd4813d1f9d5d0d2780df96f7fb4bb97e40",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : { }
      },
      "$type" : "File"
    }, {
      "size" : 86369974,
      "path" : "/media/storage2/workdir/LocalRerun20170817094835/files/Mills_and_1000G_gold_standard.indels.b37.sites.vcf",
      "location" : "/media/storage2/workdir/LocalRerun20170817094835/files/Mills_and_1000G_gold_standard.indels.b37.sites.vcf",
      "name" : "Mills_and_1000G_gold_standard.indels.b37.sites.vcf",
      "checksum" : "sha1$ffc97fc241b7cf747544271760477033ccadc055",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "species" : "Human"
        }
      },
      "$type" : "File"
    } ],
    "memory_per_job" : 10000,
    "reads" : [ {
      "size" : 5188511985,
      "path" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/BWA_MEM_Bundle_0_7_13/1/C835.HCC1143_BL.4.converted.bam",
      "location" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/BWA_MEM_Bundle_0_7_13/1/C835.HCC1143_BL.4.converted.bam",
      "name" : "C835.HCC1143_BL.4.converted.bam",
      "checksum" : "sha1$dd4883e42ac4a0d45d1e750f1f960bd5b63ce7e5",
      "secondaryFiles" : [ {
        "$type" : "File",
        "size" : 5511448,
        "path" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/BWA_MEM_Bundle_0_7_13/1/C835.HCC1143_BL.4.converted.bam.bai",
        "location" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/BWA_MEM_Bundle_0_7_13/1/C835.HCC1143_BL.4.converted.bam.bai",
        "name" : "C835.HCC1143_BL.4.converted.bam.bai",
        "checksum" : "sha1$f0e6524519ce8bcf20b2876f48872cf4d6a13e32",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : null
        },
        "$type" : "File"
      }, {
        "$type" : "File",
        "size" : 0,
        "path" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/BWA_MEM_Bundle_0_7_13/1/C835.HCC1143_BL.4.converted.bai",
        "location" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/BWA_MEM_Bundle_0_7_13/1/C835.HCC1143_BL.4.converted.bai",
        "name" : "C835.HCC1143_BL.4.converted.bai",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : null
        },
        "$type" : "File"
      } ],
      "properties" : {
        "sbg:metadata" : {
          "Quality scale" : "sanger",
          "case_id" : "CCLE-HCC1143BL",
          "experimental_strategy" : "WXS",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "reference_genome" : "human_g1k_v37_decoy",
          "sample_id" : "HCC1143BL",
          "sample_type" : "EBV Immortalized Normal",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    } ],
    "reference" : [ {
      "size" : 3189750467,
      "path" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta",
      "location" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta",
      "name" : "human_g1k_v37_decoy.fasta",
      "checksum" : "sha1$992291353a574f76f4be22ed6e37a64bf37e215f",
      "secondaryFiles" : [ {
        "$type" : "File",
        "size" : 2813,
        "path" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta.fai",
        "location" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta.fai",
        "name" : "human_g1k_v37_decoy.fasta.fai",
        "checksum" : "sha1$655334a26593e48e5047a45d219553107e96c675",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : { }
        },
        "$type" : "File"
      }, {
        "$type" : "File",
        "size" : 16694,
        "path" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/SBG_FASTA_Indices/human_g1k_v37_decoy.dict",
        "location" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/SBG_FASTA_Indices/human_g1k_v37_decoy.dict",
        "name" : "human_g1k_v37_decoy.dict",
        "checksum" : "sha1$fa0fba867007b2201828bf4c06631d8c5123ac8c",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : { }
        },
        "$type" : "File"
      } ],
      "properties" : {
        "sbg:metadata" : {
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    } ],
    "target_intervals" : [ {
      "size" : 1413209,
      "path" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_RealignerTargetCreator/C835.HCC1143_BL.4.converted.intervals",
      "location" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_RealignerTargetCreator/C835.HCC1143_BL.4.converted.intervals",
      "name" : "C835.HCC1143_BL.4.converted.intervals",
      "checksum" : "sha1$d725f8ec62ef35e13c6326b5e16fb71d1351230e",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "Quality scale" : "sanger",
          "case_id" : "CCLE-HCC1143BL",
          "experimental_strategy" : "WXS",
          "intervals_file" : "NO_INTERVALS",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "reference_genome" : "human_g1k_v37_decoy",
          "sample_id" : "HCC1143BL",
          "sample_type" : "EBV Immortalized Normal",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    } ]
  },
  "outputs" : {
    "realigned_bam_file" : {
      "size" : 4643183170,
      "path" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_IndelRealigner/C835.HCC1143_BL.4.converted.realigned.bam",
      "location" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_IndelRealigner/C835.HCC1143_BL.4.converted.realigned.bam",
      "name" : "C835.HCC1143_BL.4.converted.realigned.bam",
      "checksum" : "sha1$56f1621e5821df35510951208156994fe8416d65",
      "secondaryFiles" : [ {
        "$type" : "File",
        "size" : 0,
        "path" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_IndelRealigner/C835.HCC1143_BL.4.converted.realigned.bam.bai",
        "location" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_IndelRealigner/C835.HCC1143_BL.4.converted.realigned.bam.bai",
        "name" : "C835.HCC1143_BL.4.converted.realigned.bam.bai",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : null
        },
        "$type" : "File"
      }, {
        "$type" : "File",
        "size" : 2973976,
        "path" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_IndelRealigner/C835.HCC1143_BL.4.converted.realigned.bai",
        "location" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_IndelRealigner/C835.HCC1143_BL.4.converted.realigned.bai",
        "name" : "C835.HCC1143_BL.4.converted.realigned.bai",
        "checksum" : "sha1$c89df242bf39d67135e0f6aeace8f43119c261ce",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : null
        },
        "$type" : "File"
      } ],
      "properties" : {
        "sbg:metadata" : {
          "Quality scale" : "sanger",
          "case_id" : "CCLE-HCC1143BL",
          "experimental_strategy" : "WXS",
          "intervals_file" : "NO_INTERVALS",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "reference_genome" : "human_g1k_v37_decoy",
          "sample_id" : "HCC1143BL",
          "sample_type" : "EBV Immortalized Normal",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    }
  },
  "resources" : {
    "cpu" : 32,
    "memMB" : 46967,
    "diskSpaceMB" : null,
    "networkAccess" : true,
    "workingDir" : null,
    "tmpDir" : null,
    "outDirSize" : null,
    "tmpDirSize" : null
  },
  "visiblePorts" : [ ]
}