{
  "id" : "a5a1ca9f-bb48-4384-ba47-5bd85803023c",
  "parentId" : "cd371ce0-9406-4312-9d72-dfdd24bdf2fa",
  "rootId" : "cd371ce0-9406-4312-9d72-dfdd24bdf2fa",
  "name" : "root.GATK_BaseRecalibrator",
  "app" : "data:text/plain;base64,",
  "status" : "COMPLETED",
  "inputs" : {
    "cpu_per_job" : 8,
    "intervals_file" : [ {
      "size" : 4852475,
      "path" : "/media/storage2/workdir/LocalRerun20170817094835/files/exome_targets.b37.sorted.bed",
      "location" : "/media/storage2/workdir/LocalRerun20170817094835/files/exome_targets.b37.sorted.bed",
      "name" : "exome_targets.b37.sorted.bed",
      "checksum" : "sha1$e2afb6abf293e4854695d59ba389f41f9f598692",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : { }
      },
      "$type" : "File"
    } ],
    "known_sites" : [ {
      "size" : 8436107210,
      "path" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_BaseRecalibrator/dbsnp_137.b37.vcf",
      "location" : "/media/storage2/workdir/LocalRerun20170817094835/files/dbsnp_137.b37.vcf",
      "name" : "dbsnp_137.b37.vcf",
      "checksum" : "sha1$6b75666629d1028bc7b792e2902e36fa9c598282",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : { }
      },
      "$type" : "File"
    } ],
    "memory_per_job" : 12000,
    "reads" : [ {
      "size" : 4643183170,
      "path" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_IndelRealigner/C835.HCC1143_BL.4.converted.realigned.bam",
      "location" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_IndelRealigner/C835.HCC1143_BL.4.converted.realigned.bam",
      "name" : "C835.HCC1143_BL.4.converted.realigned.bam",
      "checksum" : "sha1$56f1621e5821df35510951208156994fe8416d65",
      "secondaryFiles" : [ {
        "$type" : "File",
        "size" : 0,
        "path" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_IndelRealigner/C835.HCC1143_BL.4.converted.realigned.bam.bai",
        "location" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_IndelRealigner/C835.HCC1143_BL.4.converted.realigned.bam.bai",
        "name" : "C835.HCC1143_BL.4.converted.realigned.bam.bai",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : null
        },
        "$type" : "File"
      }, {
        "$type" : "File",
        "size" : 2973976,
        "path" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_IndelRealigner/C835.HCC1143_BL.4.converted.realigned.bai",
        "location" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_IndelRealigner/C835.HCC1143_BL.4.converted.realigned.bai",
        "name" : "C835.HCC1143_BL.4.converted.realigned.bai",
        "checksum" : "sha1$c89df242bf39d67135e0f6aeace8f43119c261ce",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : null
        },
        "$type" : "File"
      } ],
      "properties" : {
        "sbg:metadata" : {
          "Quality scale" : "sanger",
          "case_id" : "CCLE-HCC1143BL",
          "experimental_strategy" : "WXS",
          "intervals_file" : "NO_INTERVALS",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "reference_genome" : "human_g1k_v37_decoy",
          "sample_id" : "HCC1143BL",
          "sample_type" : "EBV Immortalized Normal",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    } ],
    "reference" : [ {
      "size" : 3189750467,
      "path" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta",
      "location" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta",
      "name" : "human_g1k_v37_decoy.fasta",
      "checksum" : "sha1$992291353a574f76f4be22ed6e37a64bf37e215f",
      "secondaryFiles" : [ {
        "$type" : "File",
        "size" : 2813,
        "path" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta.fai",
        "location" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta.fai",
        "name" : "human_g1k_v37_decoy.fasta.fai",
        "checksum" : "sha1$655334a26593e48e5047a45d219553107e96c675",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : { }
        },
        "$type" : "File"
      }, {
        "$type" : "File",
        "size" : 16694,
        "path" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/SBG_FASTA_Indices/human_g1k_v37_decoy.dict",
        "location" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/SBG_FASTA_Indices/human_g1k_v37_decoy.dict",
        "name" : "human_g1k_v37_decoy.dict",
        "checksum" : "sha1$fa0fba867007b2201828bf4c06631d8c5123ac8c",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : { }
        },
        "$type" : "File"
      } ],
      "properties" : {
        "sbg:metadata" : {
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    } ],
    "threads_per_job" : 8
  },
  "outputs" : {
    "bqsr" : {
      "size" : 694938,
      "path" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_BaseRecalibrator/C835.HCC1143_BL.4.converted.realigned.recal_data.grp",
      "location" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_BaseRecalibrator/C835.HCC1143_BL.4.converted.realigned.recal_data.grp",
      "name" : "C835.HCC1143_BL.4.converted.realigned.recal_data.grp",
      "checksum" : "sha1$aabfe32b735b3879df0a54466fe951abbbb7165b",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "Quality scale" : "sanger",
          "case_id" : "CCLE-HCC1143BL",
          "experimental_strategy" : "WXS",
          "intervals_file" : "NO_INTERVALS",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "reference_genome" : "human_g1k_v37_decoy",
          "sample_id" : "HCC1143BL",
          "sample_type" : "EBV Immortalized Normal",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    },
    "plot_pdf" : {
      "size" : 48248,
      "path" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_BaseRecalibrator/C835.HCC1143_BL.4.converted.realigned.pdf",
      "location" : "/media/storage2/workdir/LocalRerun20170817094835/app-2017-08-17-101032.250/root/GATK_BaseRecalibrator/C835.HCC1143_BL.4.converted.realigned.pdf",
      "name" : "C835.HCC1143_BL.4.converted.realigned.pdf",
      "checksum" : "sha1$f3bd67d7d1377a72ae4b5eeaebe0984b49490eb2",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : { }
      },
      "$type" : "File"
    }
  },
  "resources" : {
    "cpu" : 32,
    "memMB" : 46967,
    "diskSpaceMB" : null,
    "networkAccess" : true,
    "workingDir" : null,
    "tmpDir" : null,
    "outDirSize" : null,
    "tmpDirSize" : null
  },
  "visiblePorts" : [ "plot_pdf" ]
}