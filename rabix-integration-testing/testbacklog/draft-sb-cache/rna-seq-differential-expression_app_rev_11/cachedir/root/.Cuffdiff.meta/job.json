{
  "id" : "ab5e0dbd-2e90-48ac-9e8a-15f30eb61554",
  "parentId" : "09ef6e9f-2db9-451a-ad5f-3597be8b08c3",
  "rootId" : "09ef6e9f-2db9-451a-ad5f-3597be8b08c3",
  "name" : "root.Cuffdiff",
  "app" : "data:text/plain;base64,",
  "status" : "COMPLETED",
  "inputs" : {
    "frag_bias_correct" : [ {
      "size" : 3140756381,
      "path" : "/media/storage2/workdir/LocalRerun20170814105247/files/HG19_Broad_variant.fasta",
      "location" : "/media/storage2/workdir/LocalRerun20170814105247/files/HG19_Broad_variant.fasta",
      "name" : "HG19_Broad_variant.fasta",
      "checksum" : "sha1$74ec143bb63dc39b3b33026e4ba2366093362fdd",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    } ],
    "sample_files" : [ {
      "size" : 235103358,
      "path" : "/media/storage2/workdir/LocalRerun20170814105247/app-2017-08-14-121456.224/root/Cuffquant/1/G26234.HCC1187.aligned_abundances.cxb",
      "location" : "/media/storage2/workdir/LocalRerun20170814105247/app-2017-08-14-121456.224/root/Cuffquant/1/G26234.HCC1187.aligned_abundances.cxb",
      "name" : "G26234.HCC1187.aligned_abundances.cxb",
      "checksum" : "sha1$99dfd77ea66319b4f1b45a4589d548efd3032057",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "__inherit__" : "input_bam",
          "case_id" : "CCLE-HCC1187",
          "experimental_strategy" : "RNA-Seq",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "quality_scale" : "sanger",
          "reference_genome" : "human_g1k_v37_decoy",
          "sample_group" : "Group_B",
          "sample_id" : "HCC1187",
          "sample_type" : "Cell Line",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    }, {
      "size" : 235103358,
      "path" : "/media/storage2/workdir/LocalRerun20170814105247/app-2017-08-14-121456.224/root/Cuffquant/2/G20479.HCC1143.aligned_abundances.cxb",
      "location" : "/media/storage2/workdir/LocalRerun20170814105247/app-2017-08-14-121456.224/root/Cuffquant/2/G20479.HCC1143.aligned_abundances.cxb",
      "name" : "G20479.HCC1143.aligned_abundances.cxb",
      "checksum" : "sha1$6e2c0bf740902700f41cd5adec9919dc9710d760",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "__inherit__" : "input_bam",
          "case_id" : "CCLE-HCC1143",
          "experimental_strategy" : "RNA-Seq",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "quality_scale" : "sanger",
          "reference_genome" : "human_g1k_v37_decoy",
          "sample_group" : "Group_A",
          "sample_id" : "HCC1143",
          "sample_type" : "Cell Line"
        }
      },
      "$type" : "File"
    } ],
    "transcripts" : [ {
      "size" : 847928511,
      "path" : "/media/storage2/workdir/LocalRerun20170814105247/files/Homo_sapiens.GRCh37.75.gtf",
      "location" : "/media/storage2/workdir/LocalRerun20170814105247/files/Homo_sapiens.GRCh37.75.gtf",
      "name" : "Homo_sapiens.GRCh37.75.gtf",
      "checksum" : "sha1$f46a5407f5fc1823860a7ddd7e1f322098f34d84",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : { }
      },
      "$type" : "File"
    } ]
  },
  "outputs" : {
    "zipped" : {
      "size" : 33819337,
      "path" : "/media/storage2/workdir/LocalRerun20170814105247/app-2017-08-14-121456.224/root/Cuffdiff/G2.cuffdiff.zip",
      "location" : "/media/storage2/workdir/LocalRerun20170814105247/app-2017-08-14-121456.224/root/Cuffdiff/G2.cuffdiff.zip",
      "name" : "G2.cuffdiff.zip",
      "checksum" : "sha1$7dfad5c0bbf3f95f262e1fd976e05f5e111ac2da",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : null
      },
      "$type" : "File"
    }
  },
  "resources" : {
    "cpu" : 32,
    "memMB" : 46967,
    "diskSpaceMB" : null,
    "networkAccess" : true,
    "workingDir" : null,
    "tmpDir" : null,
    "outDirSize" : null,
    "tmpDirSize" : null
  },
  "visiblePorts" : [ "zipped" ]
}