{
  "id" : "3e6a52bb-614b-41b3-b67b-df3673dca7c4",
  "parentId" : "63472647-42ce-4137-9b86-3ce36e8e9c38",
  "rootId" : "63472647-42ce-4137-9b86-3ce36e8e9c38",
  "name" : "root.Indel_GATK_SelectVariants",
  "app" : "data:text/plain;base64,",
  "status" : "COMPLETED",
  "inputs" : {
    "cpu_per_job" : 1,
    "memory_per_job" : 2048,
    "reference" : [ {
      "size" : 3189750467,
      "path" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta",
      "location" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta",
      "name" : "human_g1k_v37_decoy.fasta",
      "checksum" : "sha1$992291353a574f76f4be22ed6e37a64bf37e215f",
      "secondaryFiles" : [ {
        "$type" : "File",
        "size" : 2813,
        "path" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta.fai",
        "location" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta.fai",
        "name" : "human_g1k_v37_decoy.fasta.fai",
        "checksum" : "sha1$655334a26593e48e5047a45d219553107e96c675",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : { }
        },
        "$type" : "File"
      }, {
        "$type" : "File",
        "size" : 16694,
        "path" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/SBG_FASTA_Indices/human_g1k_v37_decoy.dict",
        "location" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/SBG_FASTA_Indices/human_g1k_v37_decoy.dict",
        "name" : "human_g1k_v37_decoy.dict",
        "checksum" : "sha1$1c16c67aec8d656d836baf0ec4075c0b34aae556",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : { }
        },
        "$type" : "File"
      } ],
      "properties" : {
        "sbg:metadata" : {
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    } ],
    "select_type_to_include" : [ "INDEL" ],
    "variants" : [ {
      "size" : 13211616,
      "path" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/GATK_UnifiedGenotyper/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.vcf",
      "location" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/GATK_UnifiedGenotyper/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.vcf",
      "name" : "C835.HCC1143_BL.4.converted.realigned.base_recalibrated.vcf",
      "checksum" : "sha1$7b5a6cdf252100e6fffe3f9b3037f19be34e2d2d",
      "secondaryFiles" : [ {
        "$type" : "File",
        "size" : 246262,
        "path" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/GATK_UnifiedGenotyper/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.vcf.idx",
        "location" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/GATK_UnifiedGenotyper/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.vcf.idx",
        "name" : "C835.HCC1143_BL.4.converted.realigned.base_recalibrated.vcf.idx",
        "checksum" : "sha1$299c6c375d1ec2d1f74b780481355c27025a63fc",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : null
        },
        "$type" : "File"
      } ],
      "properties" : {
        "sbg:metadata" : {
          "Quality scale" : "sanger",
          "case_id" : "CCLE-HCC1143BL",
          "experimental_strategy" : "WXS",
          "intervals_file" : "NO_INTERVALS",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "reference_genome" : "human_g1k_v37_decoy",
          "sample_id" : "HCC1143BL",
          "sample_type" : "EBV Immortalized Normal",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    } ]
  },
  "outputs" : {
    "select_variants_vcf" : {
      "size" : 873264,
      "path" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/Indel_GATK_SelectVariants/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.vcf",
      "location" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/Indel_GATK_SelectVariants/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.vcf",
      "name" : "C835.HCC1143_BL.4.converted.realigned.base_recalibrated.vcf",
      "checksum" : "sha1$31cb66e205394e6d9b6dcd263815ce2b8690494e",
      "secondaryFiles" : [ {
        "$type" : "File",
        "size" : 26547,
        "path" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/Indel_GATK_SelectVariants/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.vcf.idx",
        "location" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/Indel_GATK_SelectVariants/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.vcf.idx",
        "name" : "C835.HCC1143_BL.4.converted.realigned.base_recalibrated.vcf.idx",
        "checksum" : "sha1$64f8d1bb9c9818d9c09133c7ab85c15fddfd38cb",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : null
        },
        "$type" : "File"
      } ],
      "properties" : {
        "sbg:metadata" : {
          "Quality scale" : "sanger",
          "case_id" : "CCLE-HCC1143BL",
          "experimental_strategy" : "WXS",
          "intervals_file" : "NO_INTERVALS",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "reference_genome" : "human_g1k_v37_decoy",
          "sample_id" : "HCC1143BL",
          "sample_type" : "EBV Immortalized Normal",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    }
  },
  "resources" : {
    "cpu" : 32,
    "memMB" : 46967,
    "diskSpaceMB" : null,
    "networkAccess" : true,
    "workingDir" : null,
    "tmpDir" : null,
    "outDirSize" : null,
    "tmpDirSize" : null
  },
  "visiblePorts" : [ ]
}