{
  "id" : "d1d8b7f8-b287-4792-b729-28352a385724",
  "parentId" : "63472647-42ce-4137-9b86-3ce36e8e9c38",
  "rootId" : "63472647-42ce-4137-9b86-3ce36e8e9c38",
  "name" : "root.GATK_PrintReads",
  "app" : "data:text/plain;base64,",
  "status" : "COMPLETED",
  "inputs" : {
    "bqsr" : [ {
      "size" : 694938,
      "path" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/GATK_BaseRecalibrator/C835.HCC1143_BL.4.converted.realigned.recal_data.grp",
      "location" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/GATK_BaseRecalibrator/C835.HCC1143_BL.4.converted.realigned.recal_data.grp",
      "name" : "C835.HCC1143_BL.4.converted.realigned.recal_data.grp",
      "checksum" : "sha1$cb60f3fd9dfab1a860fb23a9a91737835ec973ae",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "Quality scale" : "sanger",
          "case_id" : "CCLE-HCC1143BL",
          "experimental_strategy" : "WXS",
          "intervals_file" : "NO_INTERVALS",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "reference_genome" : "human_g1k_v37_decoy",
          "sample_id" : "HCC1143BL",
          "sample_type" : "EBV Immortalized Normal",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    } ],
    "cpu_per_job" : 1,
    "intervals_file" : [ {
      "size" : 4852475,
      "path" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/GATK_PrintReads/exome_targets.b37.sorted.bed",
      "location" : "/media/storage2/workdir/LocalRerun20170821150211/files/exome_targets.b37.sorted.bed",
      "name" : "exome_targets.b37.sorted.bed",
      "checksum" : "sha1$e2afb6abf293e4854695d59ba389f41f9f598692",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : { }
      },
      "$type" : "File"
    } ],
    "memory_per_job" : 14000,
    "reads" : [ {
      "size" : 4643183171,
      "path" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/GATK_IndelRealigner/C835.HCC1143_BL.4.converted.realigned.bam",
      "location" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/GATK_IndelRealigner/C835.HCC1143_BL.4.converted.realigned.bam",
      "name" : "C835.HCC1143_BL.4.converted.realigned.bam",
      "checksum" : "sha1$dd3263e64ca9611df34cbd7292b1b60be1fd99b7",
      "secondaryFiles" : [ {
        "$type" : "File",
        "size" : 0,
        "path" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/GATK_IndelRealigner/C835.HCC1143_BL.4.converted.realigned.bam.bai",
        "location" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/GATK_IndelRealigner/C835.HCC1143_BL.4.converted.realigned.bam.bai",
        "name" : "C835.HCC1143_BL.4.converted.realigned.bam.bai",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : null
        },
        "$type" : "File"
      }, {
        "$type" : "File",
        "size" : 2973976,
        "path" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/GATK_IndelRealigner/C835.HCC1143_BL.4.converted.realigned.bai",
        "location" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/GATK_IndelRealigner/C835.HCC1143_BL.4.converted.realigned.bai",
        "name" : "C835.HCC1143_BL.4.converted.realigned.bai",
        "checksum" : "sha1$94785c5fc7478ff31330728ec98a3cfecc023cdd",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : null
        },
        "$type" : "File"
      } ],
      "properties" : {
        "sbg:metadata" : {
          "Quality scale" : "sanger",
          "case_id" : "CCLE-HCC1143BL",
          "experimental_strategy" : "WXS",
          "intervals_file" : "NO_INTERVALS",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "reference_genome" : "human_g1k_v37_decoy",
          "sample_id" : "HCC1143BL",
          "sample_type" : "EBV Immortalized Normal",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    } ],
    "reference" : [ {
      "size" : 3189750467,
      "path" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta",
      "location" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta",
      "name" : "human_g1k_v37_decoy.fasta",
      "checksum" : "sha1$992291353a574f76f4be22ed6e37a64bf37e215f",
      "secondaryFiles" : [ {
        "$type" : "File",
        "size" : 2813,
        "path" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta.fai",
        "location" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta.fai",
        "name" : "human_g1k_v37_decoy.fasta.fai",
        "checksum" : "sha1$655334a26593e48e5047a45d219553107e96c675",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : { }
        },
        "$type" : "File"
      }, {
        "$type" : "File",
        "size" : 16694,
        "path" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/SBG_FASTA_Indices/human_g1k_v37_decoy.dict",
        "location" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/SBG_FASTA_Indices/human_g1k_v37_decoy.dict",
        "name" : "human_g1k_v37_decoy.dict",
        "checksum" : "sha1$1c16c67aec8d656d836baf0ec4075c0b34aae556",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : { }
        },
        "$type" : "File"
      } ],
      "properties" : {
        "sbg:metadata" : {
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    } ],
    "threads_per_job" : 7
  },
  "outputs" : {
    "recalibrated_bam" : {
      "size" : 4879344162,
      "path" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/GATK_PrintReads/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.bam",
      "location" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/GATK_PrintReads/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.bam",
      "name" : "C835.HCC1143_BL.4.converted.realigned.base_recalibrated.bam",
      "checksum" : "sha1$b3dffaf72bdf395e5275d5ec2567039afc0fa3ac",
      "secondaryFiles" : [ {
        "$type" : "File",
        "size" : 2977752,
        "path" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/GATK_PrintReads/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.bam.bai",
        "location" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/GATK_PrintReads/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.bam.bai",
        "name" : "C835.HCC1143_BL.4.converted.realigned.base_recalibrated.bam.bai",
        "checksum" : "sha1$507b9604b811b463ea6015447cf5ef1cfb9a8ff5",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : null
        },
        "$type" : "File"
      }, {
        "$type" : "File",
        "size" : 0,
        "path" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/GATK_PrintReads/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.bai",
        "location" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/GATK_PrintReads/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.bai",
        "name" : "C835.HCC1143_BL.4.converted.realigned.base_recalibrated.bai",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : null
        },
        "$type" : "File"
      } ],
      "properties" : {
        "sbg:metadata" : {
          "Quality scale" : "sanger",
          "case_id" : "CCLE-HCC1143BL",
          "experimental_strategy" : "WXS",
          "intervals_file" : "NO_INTERVALS",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "reference_genome" : "human_g1k_v37_decoy",
          "sample_id" : "HCC1143BL",
          "sample_type" : "EBV Immortalized Normal",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    }
  },
  "resources" : {
    "cpu" : 32,
    "memMB" : 46967,
    "diskSpaceMB" : null,
    "networkAccess" : true,
    "workingDir" : null,
    "tmpDir" : null,
    "outDirSize" : null,
    "tmpDirSize" : null
  },
  "visiblePorts" : [ ]
}