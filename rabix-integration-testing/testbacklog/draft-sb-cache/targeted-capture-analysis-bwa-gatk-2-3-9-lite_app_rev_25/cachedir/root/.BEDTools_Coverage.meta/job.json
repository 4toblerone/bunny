{
  "id" : "d4083d6b-cb84-4ef2-8515-a3f2f61455a9",
  "parentId" : "63472647-42ce-4137-9b86-3ce36e8e9c38",
  "rootId" : "63472647-42ce-4137-9b86-3ce36e8e9c38",
  "name" : "root.BEDTools_Coverage",
  "app" : "data:text/plain;base64,",
  "status" : "COMPLETED",
  "inputs" : {
    "input_file_a" : [ {
      "size" : 4879344162,
      "path" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/GATK_PrintReads/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.bam",
      "location" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/GATK_PrintReads/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.bam",
      "name" : "C835.HCC1143_BL.4.converted.realigned.base_recalibrated.bam",
      "checksum" : "sha1$b3dffaf72bdf395e5275d5ec2567039afc0fa3ac",
      "secondaryFiles" : [ {
        "$type" : "File",
        "size" : 2977752,
        "path" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/GATK_PrintReads/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.bam.bai",
        "location" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/GATK_PrintReads/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.bam.bai",
        "name" : "C835.HCC1143_BL.4.converted.realigned.base_recalibrated.bam.bai",
        "checksum" : "sha1$507b9604b811b463ea6015447cf5ef1cfb9a8ff5",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : null
        },
        "$type" : "File"
      }, {
        "$type" : "File",
        "size" : 0,
        "path" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/GATK_PrintReads/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.bai",
        "location" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/GATK_PrintReads/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.bai",
        "name" : "C835.HCC1143_BL.4.converted.realigned.base_recalibrated.bai",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : null
        },
        "$type" : "File"
      } ],
      "properties" : {
        "sbg:metadata" : {
          "Quality scale" : "sanger",
          "case_id" : "CCLE-HCC1143BL",
          "experimental_strategy" : "WXS",
          "intervals_file" : "NO_INTERVALS",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "reference_genome" : "human_g1k_v37_decoy",
          "sample_id" : "HCC1143BL",
          "sample_type" : "EBV Immortalized Normal",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    } ],
    "input_file_b" : [ {
      "size" : 4852475,
      "path" : "/media/storage2/workdir/LocalRerun20170821150211/files/exome_targets.b37.sorted.bed",
      "location" : "/media/storage2/workdir/LocalRerun20170821150211/files/exome_targets.b37.sorted.bed",
      "name" : "exome_targets.b37.sorted.bed",
      "checksum" : "sha1$e2afb6abf293e4854695d59ba389f41f9f598692",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : { }
      },
      "$type" : "File"
    } ]
  },
  "outputs" : {
    "output_file" : {
      "size" : 7063488296,
      "path" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/BEDTools_Coverage/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.exome_targets.b37.sorted.bed",
      "location" : "/media/storage2/workdir/LocalRerun20170821150211/app-2017-08-21-160931.584/root/BEDTools_Coverage/C835.HCC1143_BL.4.converted.realigned.base_recalibrated.exome_targets.b37.sorted.bed",
      "name" : "C835.HCC1143_BL.4.converted.realigned.base_recalibrated.exome_targets.b37.sorted.bed",
      "checksum" : "sha1$b4a2db57933c93e0d32e1efd83ebef90cdd9a405",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : { }
      },
      "$type" : "File"
    }
  },
  "resources" : {
    "cpu" : 32,
    "memMB" : 46967,
    "diskSpaceMB" : null,
    "networkAccess" : true,
    "workingDir" : null,
    "tmpDir" : null,
    "outDirSize" : null,
    "tmpDirSize" : null
  },
  "visiblePorts" : [ "output_file" ]
}